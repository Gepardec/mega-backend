# GLOBAL Properties
quarkus:
  scheduler:
    enabled: true

  swagger-ui:
    always-include: true

  http:
    cors:
      ~: true
      origins: "/https://mega-frontend([a-z0-9-]*)\\.play\\.run\\.gepardec\\.com/,/https://gepardec-sso([a-z0-9-]*)\\.play\\.run\\.gepardec\\.com/,/https://mega-backend([a-z0-9-]*)\\.play\\.run\\.gepardec\\.com/"
      access-control-allow-credentials: true
    root-path: "/"
    non-application-root-path: "/"
    port: 8080
    auth:
      proactive: false

  log:
    console:
      enable: true
      level: "ALL"
  smallrye-metrics:
    jaxrs:
      enabled: true

  liquibase:
    change-log: "db/changelog-master.xml"
    migrate-at-start: false

  cache:
    caffeine:
      "employee":
        initial-capacity: 50
        expire-after-write: 3M
      "fehlzeitentype":
        expire-after-write: 3M
      "projektzeittype":
        expire-after-write: 3M
      "projectentry":
        expire-after-write: 3M
      "project":
        expire-after-write: 3M
      "zep-liveness":
        maximum-size: 1
        expire-after-write: 1M
      "personio-liveness":
        maximum-size: 1
        expire-after-write: 1M

  mailer:
    auth-methods: "DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN"
    from: "service@gepardec.com (MEGA Mailer)"
    host: "smtp.gmail.com"
    port: 465
    ssl: true
    username: "service@gepardec.com"
    password: "${MAILER_PASSWORD:default}"

  default-locale: "de"
  locales: 'en,de'

  transaction-manager:
    default-transaction-timeout: "240s"

  datasource:
    db-kind: "postgresql"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
    jdbc:
      url: "${DB_JDBC_URL}"
    metrics:
      enabled: true

  rest-client:
    personio-api-v1:
      url: "https://api.personio.de/v1"
    personio-health:
      url: "https://api.personio.de"
    zep:
      url: "${mega.zep.origin}/next/api/v1/"
    zep-health:
      url: "${mega.zep.origin}â€š"

  oidc:
    # for the default client (mega) we verify the access token locally
    auth-server-url: "${mega.oauth.issuer}"
    application-type: "service"
    token:
      audience: "${mega.oauth.client-id}"
    # for the server to server client (mega-cron) we verify the token with token introspection
    mega-cron:
      auth-server-url: "${mega.oauth.issuer}"
      application-type: "service"
      token:
        require-jwt-introspection-only: true
      client-id: "${mega.oauth.mega-cron.client-id}"
      credentials:
        client-secret:
          value: "${MEGA_CRON_CLIENT_SECRET:default}"
      roles:
        source: accesstoken
        role-claim-path: "resource_access/mega-cron/roles"
mp:
  openapi:
    filter: com.gepardec.mega.application.filter.MegaCronSecuritySchemaOASFilter

# disables the DefaultResponseExceptionMapper of the microprofile resteasy client
microprofile:
  rest:
    client:
      disable:
        default:
          mapper: true

mega:
  info:
    build:
      version: "${revision:local}"
      date: "${timestamp:2007-12-03T10:15:30}"

    git:
      branch: "${BRANCH:local}"
      commit: "${COMMIT:local}"

  wiki:
    eom-url: "https://sites.google.com/a/gepardec.com/internal/home/zeiterfassung-mit-zep/monatsende-kontrolle-von-arbeitszeiten"

  zep:
    admin-token: "${TOKEN:default}"
    soap-path: "/sync/soap.php?v=${SOAP_PATH_VERSION:7}"
    rest-token: "${ZEP_REST_TOKEN:default}"
    origin: "https://www.zep-online.de/zepgepardecservices_test"

  oauth:
    client-id: "mega"
    issuer: "https://gepardec-sso-qa.apps.cloudscale-lpg-2.appuio.cloud/realms/gepardec"
    scope: "openid profile email microprofile-jwt"
    mega-cron:
      client-id: "mega-cron"

  mail:
    employees:
      notification: false
    reminder:
      om:
        - "werner.bruckmueller@gepardec.com"
        - "christoph.ruhsam@gepardec.com"
        - "armin.lang@gepardec.com"
        - "manuel.vilim@gepardec.com"
        - "oliver.tod@gepardec.com"
        - "robin.fischer@gepardec.com"
        - "alexandra.stummer@gepardec.com"
        - "simon.bauer@gepardec.com"
        - "simon.gartner@gepardec.com"
        - "tobias.meindl@gepardec.com"
        - "paul.waldecker@gepardec.com"
        - "paul.proemer@gepardec.com"
        - "chiara.gattringer@gepardec.com"

    receiver:
      protocol: "imaps"
      host: "imap.gmail.com"
      port: 993
      username: "service@gepardec.com"
      password: "${MAILER_PASSWORD:default}"
      sender: "nobody@zep.de"
      cron-expr: "disabled"

  personio:
    api:
      client:
        id: "${PERSONIO_API_CLIENT_ID:default}"
        secret: "${PERSONIO_API_CLIENT_SECRET:default}"
    token:
      expires-in-minutes: 1200 # 20h - real token expires in 24h

  google:
    service-account-key: "${GOOGLE_CLOUD_SERVICE_ACCOUNT_GEPARDEC_MAIL:default}"
    gmail:
      api:
        application-name: "MEGA"
        workspace-user: "service@gepardec.com"
        label-filter:
          - "Label_5632925620975792127" # ID of name "ZEP_TEST" of workspace-user (stage-specific)
    pubsub:
      topic: "projects/mega-260510/topics/MegaWebhookEmail-QA" #stage-specific

## DEV Properties
"%dev":
  quarkus:
    mailer:
      mock: true
    datasource:
      username: "mega"
      password: "mega"
      jdbc:
        url: "jdbc:postgresql://localhost:5432/mega"
    http:
      cors:
        origins: "/.*/"

  mega:
    dash-url: "http://localhost:4444/index.html"

    mail:
      subject-prefix: "LOCAL: "
      employees:
        notification: true

## local-sso profile
"%localsso":
  mega:
    oauth:
      issuer: "http://localhost:8180/realms/gepardec"

## TEST Properties
"%test":
  quarkus:
    log:
      console:
        format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"

    scheduler:
      enabled: false

    mailer:
      mock: true
    datasource:
      db-kind: "h2"
      username: mega
      password: mega
      jdbc:
        url: 'jdbc:h2:mem:mega;MODE=PostgreSQL;INIT=create schema if not exists mega\;SET SCHEMA mega'

    hibernate-orm:
      database:
        generation: drop-and-create
    liquibase:
      migrate-at-start: true

  mega:
    dash-url: "http://localhost:8080/index.html"

    zep:
      origin: "https://www.zep-online.de/zepgepardecservices_test"

    mail:
      subject-prefix: "UNIT-TEST: "

      employees:
        notification: true
      reminder:
        om:
          - "blubb"
          - "blah"
