# GLOBAL Properties
quarkus:
  scheduler:
    enabled: true

  swagger-ui:
    always-include: true

  http:
    cors:
      ~: true
      origins: "/https://mega-frontend([a-z0-9-]*)\\.play\\.run\\.gepardec\\.com/,/https://gepardec-sso([a-z0-9-]*)\\.play\\.run\\.gepardec\\.com/"
      access-control-allow-credentials: true
    root-path: "/"
    non-application-root-path: "/"
    port: 8080

  log:
    console:
      enable: true
      level: "ALL"
  smallrye-metrics:
    jaxrs:
      enabled: true

  liquibase:
    change-log: "db/changelog-master.xml"
    migrate-at-start: false

  cache:
    caffeine:
      "employee":
        initial-capacity: 50
        expire-after-write: 3M
      "fehlzeitentype":
        expire-after-write: 3M
      "projektzeittype":
        expire-after-write: 3M
      "projectentry":
        expire-after-write: 3M
      "project":
        expire-after-write: 3M

  mailer:
    auth-methods: "DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN"
    from: "service@gepardec.com (MEGA Mailer)"
    host: "smtp.gmail.com"
    port: 465
    ssl: true
    username: "service@gepardec.com"
    password: "${MAILER_PASSWORD:default}"

  default-locale: "de"
  locales: 'en,de'

  transaction-manager:
    default-transaction-timeout: "240s"

  datasource:
    db-kind: "postgresql"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
    jdbc:
      url: "${DB_JDBC_URL}"
    metrics:
      enabled: true

  rest-client:
    personio-api-v1:
      url: "https://api.personio.de/v1"

# disables the DefaultResponseExceptionMapper of the microprofile resteasy client
microprofile:
  rest:
    client:
      disable:
        default:
          mapper: true

mega:
  info:
    build:
      version: "${revision}"
      date: "${timestamp}"

    git:
      branch: "${BRANCH:local}"
      commit: "${COMMIT:local}"

  wiki:
    eom-url: "https://sites.google.com/a/gepardec.com/internal/home/zeiterfassung-mit-zep/monatsende-kontrolle-von-arbeitszeiten"

  zep:
    admin-token: "${TOKEN:default}"
    soap-path: "/sync/soap.php?v=${SOAP_PATH_VERSION:7}"
    rest_token: "${ZEP_REST_TOKEN:default}"



  oauth:
    client-id: "mega"
    issuer: "https://gepardec-sso.apps.c-gepa-play.gepa.vshnmanaged.net/realms/gepardec"
    scope: "openid profile email microprofile-jwt"

  mail:
    employees:
      notification: false
    reminder:
      om:
        - "werner.bruckmueller@gepardec.com"
        - "christoph.ruhsam@gepardec.com"
        - "armin.lang@gepardec.com"
        - "manuel.vilim@gepardec.com"
        - "oliver.tod@gepardec.com"
        - "robin.fischer@gepardec.com"
        - "alexandra.stummer@gepardec.com"
        - "simon.bauer@gepardec.com"
        - "paul.waldecker@gepardec.com"
        - "paul.proemer@gepardec.com"

    receiver:
      protocol: "imaps"
      host: "imap.gmail.com"
      port: 993
      username: "service@gepardec.com"
      password: "${MAILER_PASSWORD:default}"
      sender: "nobody@provantis.de"
      cron-expr: "disabled"

  personio:
    api:
      client:
        id: "${PERSONIO_API_CLIENT_ID:default}"
        secret: "${PERSONIO_API_CLIENT_SECRET:default}"
    token:
      expires-in-minutes: 1200 # 20h - real token expires in 24h

mp:
  jwt:
    verify:
      issuer: "${mega.oauth.issuer}"
      audiences: "${mega.oauth.client-id}"
      publickey:
        location: "${mega.oauth.issuer}/protocol/openid-connect/certs"

## DEV Properties
"%dev":
  quarkus:
    mailer:
      mock: true
    datasource:
      username: "mega"
      password: "mega"
      jdbc:
        url: "jdbc:postgresql://localhost:5432/mega"
    http:
      cors:
        origins: "/.*/"
    rest-client:
      zep:
        url: "https://www.zep-online.de/zepgepardecservices_test/next/api/v1/"
  mega:
    dash-url: "http://localhost:4444/index.html"
    zep:
      origin: "https://www.zep-online.de/zepgepardecservices_test"

    oauth:
      issuer: "https://gepardec-sso-dev.play.run.gepardec.com/realms/gepardec"

    mail:
      subject-prefix: "LOCAL: "
      employees:
        notification: true

## local-sso profile
"%localsso":
  mega:
    oauth:
      issuer: "http://localhost:8180/realms/gepardec"

## TEST Properties
"%test":
  quarkus:
    rest-client:
        zep:
          url: "https://www.zep-online.de/zepgepardecservices_test/next/api/v1/"
    log:
      console:
        format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"

    scheduler:
      enabled: false

    mailer:
      mock: true
    datasource:
      db-kind: "h2"
      username: mega
      password: mega
      jdbc:
        url: 'jdbc:h2:mem:mega;MODE=PostgreSQL;INIT=create schema if not exists mega\;SET SCHEMA mega'

    hibernate-orm:
      database:
        generation: drop-and-create
    liquibase:
      migrate-at-start: true

  mega:
    dash-url: "http://localhost:8080/index.html"

    zep:
      origin: "https://www.zep-online.de/zepgepardecservices_test"

    oauth:
      issuer: "https://gepardec-sso-dev.play.run.geaprdec.com/realms/gepardec"

    mail:
      subject-prefix: "UNIT-TEST: "

      employees:
        notification: true
      reminder:
        om:
          - "blubb"
          - "blah"
